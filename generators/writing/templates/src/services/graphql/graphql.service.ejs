// Initializes the `<%= serviceName %>` service on path `/<%= path %>`. (Can be re-generated.)
<%- tplTsOnly([`import { App } from '../../app.interface'${sc}`, '', '']) -%>
<%- tplImports('createService', '@feathers-plus/graphql', 'req') %>
<%- tplImports('merge', 'lodash.merge', 'req') %>
<%- tplImports('{ mergeTypes }', 'merge-graphql-schemas') %>
<%- tplImports('generatedSchema', './graphql.schemas') %>
<%# -%>
<%# --- if-1 starts below. SERVICES -%>
<% if (strategy === 'services') { -%>
<%- tplImports(`generatedResolvers${!isJs ? ', { ServiceResolverOptions }' : ''}`, './service.resolvers') %>
<% } -%>
<%# --- if-1 ends above. -%>
<%# -%>
<%# --- if-2 starts below. BATCHLOADERS -%>
<% if (strategy === 'batchloaders') { -%>
<%- tplImports(`generatedResolvers${!isJs ? ', { BatchloaderResolverOptions }' : ''}`, './batchloader.resolvers') %>
<% } -%>
<%# --- if-2 ends above. -%>
<%# -%>
<%# --- if-3 starts below. SQL -%>
<% if (strategy === 'sql') { -%>
<%- tplImports(`generatedResolvers${!isJs ? ', { SqlResolverFactoryOptions }' : ''}`, './sql.resolvers') %>
<%- tplImports(`generatedMetadata${!isJs ? ', { SqlMetadataOptions }' : ''}`, './sql.metadata') %>
<%- tplImports('sqlExecute', `./sql.execute.${strategy !== 'sql' ? strategy : specs.graphql.sqlInterface}`) %>
<% } -%>
<%# --- if-3 ends above. -%>
<%- tplImports('hooks', './graphql.hooks') %>
<%- insertFragment('imports') %>

const strategy = '<%- strategy %>'<%- sc %>
// <%- lintDisableNextLineNoConsole %>
console.log(`\n===== configuring graphql service for ${strategy}.\n`)<%- sc %>

let schemas = mergeTypes([
  generatedSchema,
  <%- insertFragment('schemas') %>
])<%- sc %>

<%# -%>
<%# --- if-4 starts below. SERVICES -%>
<% if (strategy === 'services') { -%>
let resolvers = <%- tplJsOrTs('(app, options)', '(app: App, options: ServiceResolverOptions)') %> => merge({},
  generatedResolvers(app, options),
  <%- insertFragment('service_resolvers') %>
)<%- sc %>
<% } -%>
<%# --- if-4 ends above. -%>
<%# -%>
<%# --- if-5 starts below. BATCHLOADERS -%>
<% if (strategy === 'batchloaders') { -%>
let resolvers = <%- tplJsOrTs('(app, options)', '(app: App, options: BatchloaderResolverOptions)') %> => merge({},
  generatedResolvers(app, options),
  <%- insertFragment('batchloader_resolvers') %>
)<%- sc %>
<% } -%>
<%# --- if-5 ends above. -%>
<%# -%>
<%# --- if-6 starts below. SQL -%>
<% if (strategy === 'sql') { -%>
let resolvers = <%- tplJsOrTs('(app, options)', '(app: App, options: SqlResolverFactoryOptions)') %> => merge({},
  generatedResolvers(app, options),
  <%- insertFragment('sql_resolvers') %>
)<%- sc %>

let sqlJoins = <%- tplJsOrTs('(app, options)', '(app: App, options: SqlMetadataOptions)') %> => merge({},
  generatedMetadata(app, options),
  <%- insertFragment('sql_metadata') %>
)<%- sc %>

<% } -%>
<%# --- if-6 ends above. -%>
<%- insertFragment('init') %>

<%- tplJsOnly([
  'let moduleExports = function () {',
  `  const app = this${sc}`,
  ''
]) -%>
<%- tplTsOnly([
  'let moduleExports = function (app: App) {',
  ''
]) -%>
<%# -%>
<%# --- if-6a starts below. SQL -%>
<% if (strategy === 'sql') { -%>
  let { dialect, executeSql, openDb } = sqlExecute(app)<%- sc %>

  if (!dialect) {
    throw new Error('services/graphql/sql.execute.<%- js %> has not been configured.')<%- sc %>
  }

<% } -%>
<%# --- if-6a ends above. -%>
  <%- insertFragment('func_init') %>

  let options = {
    schemas,
    resolvers,
<%# -%>
<%# --- if-7 starts below. SQL -%>
<% if (strategy === 'sql') { -%>
    sqlJoins,
    dialect,
    executeSql,
    openDb,
    logSql: false,
<% } -%>
<%# --- if-7 ends above. -%>
  }<%- sc %>
  <%- insertFragment('func_options') %>

  // Initialize our service with any options it requires.
  const createdService = createService(options)<%- sc %>
  app.use('/graphql', createdService)<%- sc %>

  // Get our initialized service so that we can register hooks
  const service = app.service('/graphql')<%- sc %>

  service.hooks(hooks)<%- sc %>
  <%- insertFragment('func_return') %>
}<%- sc %>

<%- insertFragment('exports') %>
<%- `${tplExport('moduleExports')}${sc}` %>

<%- insertFragment('funcs') %>
<%- insertFragment('end') %>

/*
Stash code not used now but which may be used if the module is regenerated.
<%# -%>
<%# --- if-a starts below. SERVICES -%>
<% if (strategy !== 'services') { -%>
<%- insertFragment('service_resolvers') %>
<% } -%>
<%# --- if-a ends above. -%>
<%# -%>
<%# --- if-b starts below. BATCHLOADERS -%>
<% if (strategy !== 'batchloaders') { -%>
<%- insertFragment('batchloader_resolvers') %>
<% } -%>
<%# --- if-b ends above. -%>
<%# -%>
<%# --- if-c starts below. SQL -%>
<% if (strategy !== 'sql') { -%>
<%- insertFragment('sql_resolvers') %>
<%- insertFragment('sql_metadata') %>
<% } -%>
<%# --- if-c ends above. -%>
*/
