
/* <%- lintRule %><%- ruleQuoteDisable %> */
// Defines Sequelize model for service `<%= serviceName %>`. (Can be re-generated.)
<%- tplImports('merge', 'lodash.merge', 'req') %>
<%- tplJsOrTs(
  `const Sequelize = require('sequelize')${sc}`,
  `import Sequelize, { DefineAttributes } from 'sequelize'${sc}`
) %>
// <%- lintDisableNextLineUnused %>
<%- tplJsOrTs(
  `const DataTypes = Sequelize.DataTypes${sc}`,
  `const DataTypes = (Sequelize as any).DataTypes as Sequelize.DataTypes${sc}`
) %>
<%- insertFragment('imports') %>
<%- insertFragment('init') %>

<%# -%>
<%# --- if-1 starts below. -%>
<% if (isAuthEntityWithAuthentication) { -%>
// Your model may need the following fields:
<%# -%>
<%# --- if-1a starts below. -%>
<% if (authentication.strategies.indexOf('local') !== -1) { -%>
//   email:      { type: DataTypes.STRING, allowNull: false, unique: true },
//   password:   { type: DataTypes.STRING, allowNull: false },
<% } -%>
<%# --- if-1a ends above. -%>
<%# -%>
<%# --- forEach-1b starts below. -%>
<% oauthProviders.forEach(provider => { -%>
//   <%= `${provider.name}Id:`.padEnd(11) %> { type: DataTypes.STRING },
<% }); -%>
<%# --- forEach-1b ends above. -%>
<% } -%>
<%# --- if-1 ends above. -%>
let moduleExports = merge({},
  <%- insertFragment('sequelize_model',
    sequelizeSchemaStr.length <= 2 ? sequelizeSchemaStr.split('\n').map(str => `  ${str}`).join('\n').slice(0,-1) : sequelizeSchemaStr.split('\n').map(str => `  ${str}`).join('\n').slice(0,-4) + tplTsOnly(' as DefineAttributes'))
  %>
  <%- insertFragment('moduleExports', '  }') %>
)<%- sc %>

<%- insertFragment('exports') %>
<%- `${tplExport('moduleExports')}${sc}` %>

<%- insertFragment('funcs') %>
<%- insertFragment('end') %>
